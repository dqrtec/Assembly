microPrograma[0] = 0b000000000100001101010000001000010001; //PC <- PC + 1; FETCH; GOTO MBR;

//OPC = OPC + memory[word]; (Sintaxe assembly: ADD OPC, [END])
microPrograma[2] = 0b000000011000001101010000001000010001; //PC <- PC + 1; FETCH;
microPrograma[3] = 0b000000100000000101000000000010100010; //MAR <- MBR; READ;
microPrograma[4] = 0b000000101000000101001000000000000000; //H <- MDR;
microPrograma[5] = 0b000000000000001111000100000000001000; //OPC <- OPC + H; GOTO MAIN;

//memory[word] = OPC; (Sintaxe assembly: MOV OPC, [END])
microPrograma[6] = 0b000000111000001101010000001000010001; //PC <- PC + 1; FETCH;
microPrograma[7] = 0b000001000000000101000000000010000010; //MAR <- MBR;
microPrograma[8] = 0b000000000000000101000000000101001000; //MDR <- OPC; write; GOTO MAIN;

//goto endereco_comando_programa;(Sintaxe assembly: GOTO byte)
microPrograma[9]  = 0b000001010000001101010000001000010001; //PC <- PC + 1; FETCH;
microPrograma[10] = 0b000000000100000101000000001000010010; //PC <- MBR; FETCH; GOTO MBR;

//if OPC = 0 goto endereco_comando_programa else goto proxima_linha;(Sintaxe assembly: JZ OPC, byte)
microPrograma[11]  = 0b000001100001000101000100000000001000; //OPC <- OPC; IF ALU = 0 GOTO 268 (100001100) ELSE GOTO 12 (000001100);
microPrograma[12]  = 0b000000000000001101010000001000000001; //PC <- PC + 1; GOTO MAIN;
microPrograma[268] = 0b100001101000001101010000001000010001; //PC <- PC + 1; FETCH;
microPrograma[269] = 0b000000000100000101000000001000010010; //PC <- MBR; FETCH; GOTO MBR;

//OPC = OPC - memory[word]; (Sintaxe assembly: SUB OPC, [END])
microPrograma[13] = 0b000001110000001101010000001000010001; //PC <- PC + 1; FETCH;
microPrograma[14] = 0b000001111000000101000000000010100010; //MAR <- MBR; READ;
microPrograma[15] = 0b000010000000000101001000000000000000; //H <- MDR;
microPrograma[16] = 0b000000000000001111110100000000001000; //OPC <- OPC - H; GOTO MAIN;